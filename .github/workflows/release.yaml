name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+" # Only create releases on matching tags following semver X.Y.Z

jobs:
  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: Linux
            PYINSTALLER_ARGS: "--onefile --add-data 'data/song_list.json:data' --add-data './platforms:platforms'"
          - os: macos-latest
            TARGET: macOS
            PYINSTALLER_ARGS: "--windowed --icon src/usdb_syncer/gui/resources/appicon_128x128.png --add-data 'data/song_list.json:data'"
          - os: windows-latest
            TARGET: Windows
            PYINSTALLER_ARGS: "--onefile --icon src/usdb_syncer/gui/resources/appicon_128x128.png --add-data 'data/song_list.json;data'"
    steps:
      - uses: actions/checkout@v3
      - name: Install Linux specific dependencies for dbus-python
        if: matrix.TARGET == 'Linux'
        run: |
          sudo apt install -y gcc python3-dev libdbus-1-dev
          pkg-config --cflags --libs dbus-1
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: "6.*"
          setup-python: false
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install '.[dev]'
      - name: Write version and commit hash
        run: write_release_info -p src/usdb_syncer/constants.py -v ${{ github.ref_name }} -c ${{ github.workflow_sha }}
      - name: Generate GUI elements
        run: generate_pyside_files
      - name: Scrape USDB song list to ship with the bundle
        run: generate_song_list_json -t 'data/song_list.json' -u '${{ secrets.USDB_USER }}' -p '${{ secrets.USDB_PASSWORD }}'
      - name: Collect required platform plugins
        run: |
          echo "$QT_QPA_PLATFORM_PLUGINS_PATH"

          mkdir platforms
          ls "$QT_QPA_PLATFORM_PLUGINS_PATH"
          cp "${QT_QPA_PLATFORM_PLUGINS_PATH}/libqxcb.so ./platforms
          ls ./platforms
      - name: Build with pyinstaller for ${{matrix.os}}
        run: pyinstaller -n 'USDB_Syncer-${{github.ref_name}}-${{matrix.TARGET}}' ${{matrix.PYINSTALLER_ARGS}} src/usdb_syncer/main.py
      - name: Create DMG
        if: matrix.TARGET == 'macOS'
        run: |
          brew install create-dmg
          create-dmg \
            --volname "USDB Syncer" \
            --volicon "src/usdb_syncer/gui/resources/appicon_128x128.png" \
            --window-pos 200 120 \
            --window-size 600 300 \
            --icon-size 128 \
            --text-size 14 \
            --icon "USDB_Syncer-${{github.ref_name}}-${{matrix.TARGET}}.app" 175 120 \
            --hide-extension "USDB_Syncer-${{github.ref_name}}-${{matrix.TARGET}}.app" \
            --app-drop-link 425 120 \
            --hdiutil-quiet \
            --no-internet-enable \
            "dist/USDB_Syncer-${{github.ref_name}}-${{matrix.TARGET}}.dmg" \
            "dist/USDB_Syncer-${{github.ref_name}}-${{matrix.TARGET}}.app"
      - uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            dist/*
            !dist/*.app

  release:
    name: Create release
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/*"
